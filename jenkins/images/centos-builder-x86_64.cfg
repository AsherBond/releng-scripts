# Eucalyptus CentOS 6 Builder
# Used with Jenkins CI to build Eucalyptus
# Version: 2.0.2
lang en_US.UTF-8
keyboard us
skipx
timezone UTC
auth --useshadow --enablemd5
selinux --permissive
firstboot --disabled
firewall --enabled --ssh
bootloader --timeout=1  --append xen_blkfront.sda_is_xvda=1
network --bootproto=dhcp --device=eth0 --onboot=on
services --enabled=network,nfslock,rpcbind,ntpd,ntpdate

#
# No root password by default
#rootpw password

#
# Define how large you want your rootfs to be
# NOTE: S3-backed AMIs have a limit of 10G
#
part / --size 1152 --fstype ext3

#
# Repositories
repo --name=CentOS6-Base --baseurl=http://mirror.qa.eucalyptus-systems.com/centos/6.3/os/$basearch/
repo --name=CentOS6-Updates --baseurl=http://mirror.qa.eucalyptus-systems.com/centos/6.3/updates/$basearch/
repo --name=EPEL --baseurl=http://mirror.qa.eucalyptus-systems.com/epel/6/$basearch/

#
#
# Add all the packages after the base packages
#
%packages --nobase --instLangs=en
@core
system-config-securitylevel-tui
system-config-firewall-base
audit
pciutils
bash
coreutils
kernel-xen
grub
e2fsprogs
passwd
policycoreutils
chkconfig
rootfiles
yum
vim-enhanced
acpid
openssh-clients
openssh-server
curl
cloud-init
sudo
rpcbind
nfs-utils
python-imgcreate
python-jinja2
yum-presto
rpm-build

#
# Jenkins Builder Support
wget
java-1.7.0-openjdk
git
mock

#
# Allow for dhcp access
dhclient
iputils

#
# Package exclusions
-atmel-firmware
-b43-openfwwf
-cyrus-sasl
-postfix
-sysstat
-xorg-x11-drv-ati-firmware
-yum-utils
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-rt61pci-firmware
-rt73usb-firmware
-mysql-libs
-zd1211-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-aic94xx-firmware
-iwl6000g2a-firmware
-iwl100-firmware
-bfa-firmware

%end

#
# Jenkins user account
%post --erroronfail
/usr/sbin/useradd jenkins
/usr/sbin/usermod -a -G mock jenkins
# Allow use of sudo in Jenkins builds
sed -i '/requiretty/s/^/#/' /etc/sudoers
cat > /etc/sudoers.d/jenkins_env << EOF
#
# Preserve environment variables supplied to the build environment
Defaults env_keep += "BUILD_NUMBER BUILD_ID JOB_NAME BUILD_TAG"
Defaults env_keep += "EXECUTOR_NUMBER NODE_NAME NODE_LABELS WORKSPACE"
Defaults env_keep += "JENKINS_HOME JENKINS_URL BUILD_URL JOB_URL"
#
# Jenkins user should not need password
jenkins ALL=(ALL) NOPASSWD: ALL
EOF

chmod 440 /etc/sudoers.d/jenkins_env
%end

#
# Builder setup
%post --erroronfail
mkdir -p /srv/{jenkins,release}

cat > /etc/cron.daily/jenkins-cleanup << EOF
#!/bin/bash

cleanup_list=\$(find /srv/jenkins/mock/build -maxdepth 1 -type d -mtime +.5)

logger "Jenkins Build Cleanup: Running"

for dir in \$cleanup_list; do
    logger "Jenkins Build Cleanup: removing \$dir"
    rm -rf "\$dir"
done

logger "Jenkins Build Cleanup: Complete"
EOF

chmod 755 /etc/cron.daily/jenkins-cleanup

# Mock default settings
cat > /etc/mock/site-defaults.cfg << EOF
config_opts['basedir'] = '/srv/jenkins/mock/build/'
config_opts['cache_topdir'] = '/srv/jenkins/mock/cache/'
EOF

# Mock logging configuration
cat > /etc/mock/logging.ini << EOF
; Logging configuration for Jenkins builds
; Makes build output visible from the console output view
[formatters]
keys: detailed,simple,unadorned,state

[handlers]
keys: simple_console,detailed_console,unadorned_console,unadorned_console_debug,simple_console_warnings_only

[loggers]
keys: root,build,state,mockbuild

[formatter_state]
format: %(asctime)s - %(message)s

[formatter_unadorned]
format: %(message)s

[formatter_simple]
format: %(levelname)s: %(message)s

[formatter_detailed]
format: %(levelname)s %(filename)s:%(lineno)d:  %(message)s

[handler_unadorned_console]
class: StreamHandler
args: []
formatter: unadorned
level: INFO

[handler_unadorned_console_debug]
class: StreamHandler
args: []
formatter: unadorned
level: DEBUG

[handler_simple_console]
class: StreamHandler
args: []
formatter: unadorned
level: INFO

[handler_simple_console_warnings_only]
class: StreamHandler
args: []
formatter: simple
level: WARNING

[handler_detailed_console]
class: StreamHandler
args: []
formatter: detailed
level: WARNING

[logger_root]
level: NOTSET
handlers: simple_console

[logger_mockbuild]
level: NOTSET
handlers:
qualname: mockbuild
propagate: 1

[logger_state]
level: NOTSET
handlers: unadorned_console
qualname: mockbuild.Root.state
propagate: 0

[logger_build]
level: NOTSET
handlers: unadorned_console_debug
qualname: mockbuild.Root.build
propagate: 0
EOF

# Setup SSH
for u in root jenkins; do
    sshdir=`eval echo ~$u/.ssh`
    mkdir -p $sshdir
    chmod 700 $sshdir

        # Avoid Host Key Verification failures
    cat > $sshdir/config << EOF
Host git.eucalyptus-systems.com
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
Host github.com
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
EOF
    chown -R ${u}:${u} $sshdir
done
%end

#
# Configure cloud-init
%post --erroronfail
cat > /etc/cloud/cloud.cfg << EOF
user: jenkins
disable_root: 1
ssh_pwauth:   0

# Mounts for instance-store
mounts:
 - [ ephemeral0, /srv/jenkins ]
 - [ swap, none, swap, sw, 0, 0 ]

cc_ready_cmd: ['/bin/true']
locale_configfile: /etc/sysconfig/i18n
mount_default_fields: [~, ~, 'auto', 'defaults,nofail', '0', '2']
ssh_deletekeys:   0
ssh_genkeytypes:  ~
ssh_svcname:      sshd
syslog_fix_perms: ~

cloud_init_modules:
 - bootcmd
 - resizefs
 - set_hostname
 - rsyslog
 - ssh

cloud_config_modules:
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - timezone
 - disable-ec2-metadata
 - runcmd

cloud_final_modules:
 - scripts-per-once
 - scripts-per-boot
 - scripts-per-instance
 - scripts-user
 - keys-to-console
 - phone-home
 - final-message

# vim:syntax=yaml
EOF

mkdir -p /var/lib/cloud/scripts/per-boot
cat > /var/lib/cloud/scripts/per-boot/git-key.sh << EOF
#!/bin/bash
for d in /root /home/jenkins; do
    curl http://cloud.release.eucalyptus-systems.com/cloud-files/jenkins-git.key > \${d}/.ssh/id_rsa
    chmod 600 \${d}/.ssh/id_rsa
    u=\$(basename \$d)
    chown \${u}:\${u} \${d}/.ssh/id_rsa
done
EOF

chmod 755 /var/lib/cloud/scripts/per-boot/git-key.sh
%end

