#!/bin/bash

SCRIPT_DIR="`dirname "$0"`"

[ -z "$GNUPGHOME" ] && export GNUPGHOME=@KEY_PATH@

PACKAGE_VERSION=3.2.0
TARGET_PLATFORM=.el6

# Internal Release Repository
INTERNAL_NAME=eucalyptus-release-internal
INTERNAL_URL=http://release-repo.eucalyptus-systems.com/releases/eucalyptus/nightly/3.2/centos/\$releasever/\$basearch/

# Public Release Repository
PUBLIC_NAME=eucalyptus-release
PUBLIC_URL=http://downloads.eucalyptus.com/software/eucalyptus/nightly/3.2/centos/\$releasever/\$basearch/

# Release Key
# KEY=C1240596

# Nightly Key
KEY=9D7B073C

build_package() {
    local package_name=$1
    local url=$2
    local tmpdir=`mktemp -d`

    mkdir -p $tmpdir/{RPMS,SPECS,SOURCES,BUILD}

    gpg --export -a $KEY > $tmpdir/SOURCES/$package_name.pub

    cat > $tmpdir/SOURCES/$package_name.repo <<EOF
[$package_name]
name=$package_name
baseurl=$url
gpgkey=file:///etc/pki/rpm-gpg/$package_name.pub
gpgcheck=1
enabled=1
EOF

    rpmbuild -bb --define "_topdir $tmpdir" \
        --define "package_name $package_name" \
        --define "package_version $PACKAGE_VERSION" \
        --define "dist $TARGET_PLATFORM" \
        $SCRIPT_DIR/release-package.spec

    pkgname=`echo -n $tmpdir/RPMS/noarch/*.rpm`
    cp $pkgname "$DESTDIR"
    ln -s `basename $pkgname` "$DESTDIR"/$package_name-${PACKAGE_VERSION}.noarch.rpm

    rm -rf $tmpdir
}

while getopts ":t:" opt; do
  case $opt in
    t)
      TARGET_PLATFORM=$OPTARG
      shift 2
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

DESTDIR="$@"

[ -z "$DESTDIR" ] && DESTDIR=.

if [ ! -d "$DESTDIR" ]; then
    echo "Directory \`$DESTDIR' does not exist"
    exit 1
fi

build_package $PUBLIC_NAME $PUBLIC_URL
build_package $INTERNAL_NAME $INTERNAL_URL

